"use strict";var UndoManager,__slice=[].slice;UndoManager=function(){function UndoManager(options){this.bindings={};this.options=$.extend({buffer:1e3,state:"",synchronizeOnUpdate:false,comparator:function comparator(a,b){return a===b}},options);this.reset()}UndoManager.prototype.reset=function(state,options){if(options==null){options={}}this.clearTimeout();delete this.undos;delete this.redos;delete this.bufferTimeout;this.undos=[];this.redos=[];this.bufferReady=true;return this.state=state};UndoManager.prototype.undo=function(){if(!this.canUndo()){return false}this.redos.push(this.state);this.state=this.undos.pop();this.trigger("undo",this.state);this.synchronize();return this.undos.length};UndoManager.prototype.redo=function(){if(!this.canRedo()){return false}this.undos.push(this.state);this.state=this.redos.pop();this.trigger("redo",this.state);this.synchronize();return this.redos.length};UndoManager.prototype.canUndo=function(){return this.undos.length>0};UndoManager.prototype.canRedo=function(){return this.redos.length>0};UndoManager.prototype.on=function(){var args,_ref;args=1<=arguments.length?__slice.call(arguments,0):[];return(_ref=$(this)).on.apply(_ref,args)};UndoManager.prototype.off=function(){var args,_ref;args=1<=arguments.length?__slice.call(arguments,0):[];return(_ref=$(this)).off.apply(_ref,args)};UndoManager.prototype.update=function(state,options){var _this=this;if(options==null){options={}}if(this.options.comparator(this.state,state)&&!options.force){return false}this.redos=[];if(options.force||this.bufferReady){this.undos.push(this.state);this.trigger("push",this.state);this.bufferReady=false}this.clearTimeout();this.bufferTimeout=setTimeout((function(){_this.trigger("buffered",_this.state);return _this.bufferReady=true}),this.options.buffer);this.state=state;return this.synchronize(this.options.synchronizeOnUpdate!=null)};UndoManager.prototype.clearTimeout=function(){if(this.bufferTimeout!=null){return clearTimeout(this.bufferTimeout)}};UndoManager.prototype.trigger=function(){var args,_ref;args=1<=arguments.length?__slice.call(arguments,0):[];return(_ref=$(this)).triggerHandler.apply(_ref,args)};UndoManager.prototype.synchronize=function(options){this.trigger("change",this.state);if(this.options.synchronize!=null&&callThrough){return this.options.synchronize(this.state)}};return UndoManager}();
